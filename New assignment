// Import the required package

import java.util.Random;

// Create a class

public class Program

{

    // Define main() function

    public static void main(String[] args)

    {

        // Declare array

        int[] data = new int[10];

        // Create constructor

        Random generator = new Random();

        // Execute for loop

        for (int i = 0; i < 10; i++)

            {

            data[i] = generator.nextInt(100) + 1;

        }

    // Printing even indices

    // Execute for loop

    for (int i = 0; i < data.length; i = i + 2)

    {

        // Print the statement

        System.out.print(data[i] + " ");

    }

    // Print the statement

    System.out.println();

    // Printing even elements

    // Execute for loop

    for (int i = 0; i < data.length; i++)

    {

        // Execute if condition

        if (data[i] % 2 == 0)

        {

            // Print the statement

            System.out.print(data[i] + " ");

        }

    }

    // Print the statement

    System.out.println();

    // Printing elements in reverse order

    // Execute for loop

    for (int i = data.length - 1; i >= 0; i--)

    {

        // Print the statement

        System.out.print(data[i] + " ");

    }

    // Print the statement

    System.out.println();

        // Printing first and last elements

System.out.printf("%d %d\n", data[0], data[data.length - 1]);

    }

}









//##2

// import the required package

import java.util.Scanner;

//create a class

public class Program

{

    //define the method main

    public static void main(String[] args)

    {

        //create the scanner class

        Scanner input = new Scanner(System.in);

        //declare the array

        int[] array = new int[10];

        //execute for loop

        for (int i = 0; i < array.length; i++)

        {

            //print the statement

System.out.printf("%d element of array: ", i + 1);

            array[i] = input.nextInt();

        }

        input.close();

        //declare variable sum

        int sum = sumWithoutSmallest(array);

        //print the statement

System.out.printf("Sum without smallest one is: %d\n", sum);

    }

    //create the method sumWithoutSmallest

    public static int sumWithoutSmallest(int[] array)

    {

            //define variable smallestValue

            int smallestValue = array[0];

            //define variable sum

            int sum = smallestValue;

            //execute for loop

            for (int i = 1; i < array.length; i++)

            {

                //define if condition

                if (array[i] < smallestValue)

                {

                    smallestValue = array[i];

                }

                sum += array[i];

            }

            return sum - smallestValue;

    }

}



//#### 3


import java.util.Random;

 

/

 * This class generates permutations of a sequence of integers 1...length.

 */

public class PermutationGenerator {

private Random generator;

private int length;

 

/

* Construct a PermutationGenerator object.

* 

* @param length

*            the length of the permutations generated by this generator.

*/

public PermutationGenerator(int length) {

// "Seeding" this so testing is deterministic.

generator = new Random(42);

this.length = length;

}

 

/**

* Gets the next permutation.

* 

* @return the array containing the next permutation

*/

public int[] nextPermutation() {

// Array containing values from 1 to length

int[] array2 = new int[length];

//Add values to array2

for (int i = 0; i < length; i++) {

array2[i] = i + 1;

}

//Permutation array

int[] permutationArray = new int[length];

int counter = 0; //counter variable for permuation array

//Iterate while loop from counter to length-1

while (counter < length) {

//generate a random index between 0-9

int index = generator.nextInt(length);

//If value at that index in array2 is <=0 means,

//the value has already been read and replaced by -1

//Continue and generate another index

//Else, store this value in permutationArray at index counter

//Set array2[index] = -1

//Increment counter to hold next index for permutationArray

if (array2[index] <= 0) {

continue;

}else{

permutationArray[counter] = array2[index];

array2[index] = -1;

counter++;

}

}

return permutationArray; //return permutation array

}

}




//####4


import java.util.Scanner;

public class DataSet1 {

 

    private double[] array;

    private int size;

 

    public DataSet1(int maxNumberOfValues) {

        size = 0;

        array = new double[maxNumberOfValues];

    }

 

    public void addValue(double value) {

        if(size < array.length)

            array[size++] = value;

    }

 

    public double getSum() {

        double sum = 0;

        for (int i = 0; i < size; i++) {

            sum += array[i];

        }

        return sum;

    }

 

    public double getAverage() {

        double total = 0;

        for (double element : array) {

            total = total + element;

        }

 

        return total/size;

    }

    public double getMaximum() {

 

        double largest = Double.MIN_VALUE;

        for (int i = 0; i < size; i++) {

            largest = Math.max(largest, array[i]);

        }

 

        return largest;

    }

    public double getMinimum() {

 

        double smallest = Double.MAX_VALUE;

        for (int i = 0; i < size; i++) {

            smallest = Math.min(smallest, array[i]);

        }

        return smallest;

    }

    public static void main(String[] args) {

        

        final int LENGTH = 100;

        Scanner in = new Scanner(System.in);

        

        // creating Object

        DataSet1 d1 = new DataSet1(LENGTH);

        

        System.out.print("Enter amount of numbers to be determined : ");

        int x = in.nextInt();

        

        System.out.println("Enter values to be used :");

        

        for(int i=0; i<x; i++){

            

            double val = in.nextDouble();

            d1.addValue(val);

        }

            

        System.out.println("Sum is : " + d1.getSum());

        System.out.println("Average is :" + d1.getAverage());

        System.out.println("Maximum is :" + d1.getMaximum());

        System.out.println("Minimum is :" + d1.getMinimum());

        

        in.close();

    }

 

}
